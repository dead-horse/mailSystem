require('../test/common');
require('../../http_patch'); // fixed the http headers not limit security problem.
var http = require('http'),
    util = require('util'),
    formidable = require('../'),
    server;

server = http.createServer(function(req, res) {
  console.log(req.headers);
  console.log(req.method, req.url.substring(0, 100), Object.keys(req.headers).length);
  if (req.url == '/') {
    res.writeHead(200, {'content-type': 'text/html'});
    res.end(
      '<form action="/upload" enctype="multipart/form-data" method="post">'+
      '<input type="text" name="title"><br>'+
      '<input type="file" name="upload" multiple="multiple"><br>'+
      '<input type="submit" value="Upload">'+
      '</form>'
    );
  } else if (req.url == '/upload') {
    var form = new formidable.IncomingForm(),
        files = [],
        fields = [];
    
    if (typeof TEST_TMP === 'undefined') {
      TEST_TMP = '/tmp/testformidable';
    }
    form.uploadDir = TEST_TMP;
    var field_count = 0;
    form
      .on('field', function(field, value) {
        // console.log(field, value);
        field_count++;
        fields.push([field, value]);
      })
      .on('file', function(field, file) {
        console.log(field, file);
        files.push([field, file]);
      })
      .on('end', function() {
        console.log('-> upload done, %d fields, %d files', field_count, files.length);
        res.writeHead(200, {'content-type': 'text/plain'});
        res.write('received fields:\n\n '+util.inspect(field_count));
        res.write('\n\n');
        res.end('received files:\n\n '+util.inspect(files));
      }).on('error', function(err) {
        console.error('%s %s', req.url, err.stack);
        res.writeHead(500);
        res.end('Server Error');
      });
    form.parse(req);
  } else {
    res.writeHead(404, {'content-type': 'text/plain'});
    res.end('404');
  }
});

if (typeof TEST_PORT === 'undefined') {
  TEST_PORT = 8080;
}

server.listen(TEST_PORT);

console.log('listening on http://localhost:'+TEST_PORT+'/');
